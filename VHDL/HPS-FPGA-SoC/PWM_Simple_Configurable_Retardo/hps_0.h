#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'hps' in
 * file './hps.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following master:
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'freq_clk', class 'altera_avalon_pio'
 * The macros are prefixed with 'FREQ_CLK_'.
 * The prefix is the slave descriptor.
 */
#define FREQ_CLK_COMPONENT_TYPE altera_avalon_pio
#define FREQ_CLK_COMPONENT_NAME freq_clk
#define FREQ_CLK_BASE 0x0
#define FREQ_CLK_SPAN 16
#define FREQ_CLK_END 0xf
#define FREQ_CLK_BIT_CLEARING_EDGE_REGISTER 0
#define FREQ_CLK_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FREQ_CLK_CAPTURE 0
#define FREQ_CLK_DATA_WIDTH 25
#define FREQ_CLK_DO_TEST_BENCH_WIRING 0
#define FREQ_CLK_DRIVEN_SIM_VALUE 0
#define FREQ_CLK_EDGE_TYPE NONE
#define FREQ_CLK_FREQ 50000000
#define FREQ_CLK_HAS_IN 0
#define FREQ_CLK_HAS_OUT 1
#define FREQ_CLK_HAS_TRI 0
#define FREQ_CLK_IRQ_TYPE NONE
#define FREQ_CLK_RESET_VALUE 0

/*
 * Macros for device 'duty_cycle', class 'altera_avalon_pio'
 * The macros are prefixed with 'DUTY_CYCLE_'.
 * The prefix is the slave descriptor.
 */
#define DUTY_CYCLE_COMPONENT_TYPE altera_avalon_pio
#define DUTY_CYCLE_COMPONENT_NAME duty_cycle
#define DUTY_CYCLE_BASE 0x10
#define DUTY_CYCLE_SPAN 16
#define DUTY_CYCLE_END 0x1f
#define DUTY_CYCLE_BIT_CLEARING_EDGE_REGISTER 0
#define DUTY_CYCLE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DUTY_CYCLE_CAPTURE 0
#define DUTY_CYCLE_DATA_WIDTH 8
#define DUTY_CYCLE_DO_TEST_BENCH_WIRING 0
#define DUTY_CYCLE_DRIVEN_SIM_VALUE 0
#define DUTY_CYCLE_EDGE_TYPE NONE
#define DUTY_CYCLE_FREQ 50000000
#define DUTY_CYCLE_HAS_IN 0
#define DUTY_CYCLE_HAS_OUT 1
#define DUTY_CYCLE_HAS_TRI 0
#define DUTY_CYCLE_IRQ_TYPE NONE
#define DUTY_CYCLE_RESET_VALUE 0

/*
 * Macros for device 'enable', class 'altera_avalon_pio'
 * The macros are prefixed with 'ENABLE_'.
 * The prefix is the slave descriptor.
 */
#define ENABLE_COMPONENT_TYPE altera_avalon_pio
#define ENABLE_COMPONENT_NAME enable
#define ENABLE_BASE 0x20
#define ENABLE_SPAN 16
#define ENABLE_END 0x2f
#define ENABLE_BIT_CLEARING_EDGE_REGISTER 0
#define ENABLE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define ENABLE_CAPTURE 0
#define ENABLE_DATA_WIDTH 1
#define ENABLE_DO_TEST_BENCH_WIRING 0
#define ENABLE_DRIVEN_SIM_VALUE 0
#define ENABLE_EDGE_TYPE NONE
#define ENABLE_FREQ 50000000
#define ENABLE_HAS_IN 0
#define ENABLE_HAS_OUT 1
#define ENABLE_HAS_TRI 0
#define ENABLE_IRQ_TYPE NONE
#define ENABLE_RESET_VALUE 0


#endif /* _ALTERA_HPS_0_H_ */
